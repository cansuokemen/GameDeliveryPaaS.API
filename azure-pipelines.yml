# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: 'Release'
  SECRET_NAME: your-secret-value-here  # Gerekirse buraya secret tanımı yap

steps:
# Azure Key Vault’tan secret çek (opsiyonel)
- task: AzureKeyVault@2
  displayName: 'Fetch secrets from Azure Key Vault'
  inputs:
    azureSubscription: 'GameDeliveryPaaS-ServiceConnection'
    KeyVaultName: 'GameDeliveryVault'
    SecretsFilter: '*'
    RunAsPreJob: false

# Secret dosyası oluştur (opsiyonel)
- task: CmdLine@2
  displayName: 'Create secret file'
  inputs:
    script: 'echo $(SECRET_NAME) > secret.txt'

# Dosyayı kopyala
- task: CopyFiles@2
  displayName: 'Copy secret file'
  inputs:
    Contents: 'secret.txt'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

# .NET 8 yükle
- task: UseDotNet@2
  displayName: 'Install .NET SDK 8.x'
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Proje adını al
- task: PowerShell@2
  displayName: 'Set project name variable'
  inputs:
    targetType: 'inline'
    script: |
      $projectFile = Get-ChildItem -Recurse *.csproj | Where-Object { $_.Name -like '*GameDeliveryPaaS.API.csproj' } | Select-Object -First 1
      Write-Host "##vso[task.setvariable variable=ProjectName]$($projectFile.BaseName)"

# Restore
- task: DotNetCoreCLI@2
  displayName: 'Restore project'
  inputs:
    command: 'restore'
    projects: '**/*.sln'

# Build
- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '--configuration $(BuildConfiguration)'

# Test
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '**/*.sln'

# Publish
- task: DotNetCoreCLI@2
  displayName: 'Publish project'
  inputs:
    command: 'publish'
    projects: '**/*.sln'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'

# Deploy
- task: AzureWebApp@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: 'GameDeliveryPaaS-ServiceConnection'
    appType: 'webApp'
    appName: 'GameDeliveryPaaS-API'  # Azure Web App adı
    package: '$(Build.ArtifactStagingDirectory)/publish/$(ProjectName).zip'

# Temizlik
- task: DeleteFiles@1
  displayName: 'Cleanup artifacts'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'